Modern Crypto

RSA
    can use for Session Keys
    
    misconceptions
        public key is more secure than symmetric encryption
        public key has made symmetric encryption obsolete
        key distribution is easy with public key

    disadvantages:
        public key is ~200x slower than AES (b/c of key exchange over internet)
        keys are large
        relies on unproven number-theoretic assumptions
    
    how to ensure authenticity of keys?
        public-key certificate authorities (CA)
            each authority has a private key (secret key)
            recognizes authenticity of server by signing server's public key with the CA's private key


    brute force attack to find RSA private key


Elliptic-Curve Cryptography (ECC)
    much more difficult to factor than RSA
    logarithmic based
    not as well adopted
    better performance than RSA

Quantum resistant Cryptography
    symmetric algorithms (like AES) are quantum resistant
        RSA, Diffie Hellman, ECC is not
    NIST = quantum hardened key exchange algorithm


Message Authentication Codes
MAC = Ck(m)
    send both m and MAC tag
    recipient computes Ck(m) and compares their computed tag
    if tags are equal, message was not modified

MAC application: Tripwire in antivirus software
    at install time, calculates MAC tag of each file
    when virus scanning, checks if MAC is same; if different, file may have been modified by malicious attacker

Extention attack
    people add additional parts in a message and its unable to be traced
    ** video on slides about math of why Merkle-Damgard is insecure

SECURE HMAC
    2 keys
    K1, K2
    h(K2 | h(K1 | M))


