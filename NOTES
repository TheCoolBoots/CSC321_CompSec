Modern Crypto

RSA
    can use for Session Keys
    
    misconceptions
        public key is more secure than symmetric encryption
        public key has made symmetric encryption obsolete
        key distribution is easy with public key

    disadvantages:
        public key is ~200x slower than AES (b/c of key exchange over internet)
        keys are large
        relies on unproven number-theoretic assumptions
    
    how to ensure authenticity of keys?
        public-key certificate authorities (CA)
            each authority has a private key (secret key)
            recognizes authenticity of server by signing server's public key with the CA's private key


    brute force attack to find RSA private key


Elliptic-Curve Cryptography (ECC)
    much more difficult to factor than RSA
    logarithmic based
    not as well adopted
    better performance than RSA

Quantum resistant Cryptography
    symmetric algorithms (like AES) are quantum resistant
        RSA, Diffie Hellman, ECC is not
    NIST = quantum hardened key exchange algorithm


Message Authentication Codes
MAC = Ck(m)
    send both m and MAC tag
    recipient computes Ck(m) and compares their computed tag
    if tags are equal, message was not modified

MAC application: Tripwire in antivirus software
    at install time, calculates MAC tag of each file
    when virus scanning, checks if MAC is same; if different, file may have been modified by malicious attacker

Extention attack
    people add additional parts in a message and its unable to be traced
    ** video on slides about math of why Merkle-Damgard is insecure

SECURE HMAC
    2 keys
    K1, K2
    h(K2 | h(K1 | M))


design principles
    economy of mechanism
    fail safe defaults
    complete mediation
    open design
    separation of privilege
    least privilege
    least common mechanism
    psychological acceptability
    work factor 
    compromise recording

build security in, don't bolt-on

Virus
    malicious software attached to a document, file, program, and shared by people
    // user has to run the virus

    Phases:
        dormant
        propagation
        triggering
            day and time, condition, etc.
        execution
    classification:
        virus invectors, macro virus, boot sector infector (screw up computer bios/startup), multipartite virus
        polymorphic - evasion based on variable encryption key
        metamorphic - evasion based on code rewrite

Worms
    rapidly replicates and spreads to any device within the network
    // replicates it self; VIRUS DOES NOT
    John Von Neumann
        suggested a program that could replicate itself
    propagation techniques
        email
        file sharing
        remote execution/login
Trojans
    malicious software disguised as useful software


detection
    old
        based on fingerprints
    new
        based on behaviors

iloveyou worm analysis
    virtual basic script created by Onel De Guzman
    24 yr old college student in Manila, Philippines
    10% of all computers infected
    5-8 billion in damage
    10-15 billion to clean up
    many institutions just shut down their email servers to stop the spread

    copied itself over windows dll's that auto run on boot
    hides mp3 files
    deletes other files

    creates html file with iteself embedded in it
    sends it as a link in email
    looks at contacts and sends email to all of them
    


malware payloads
    logic bombs, backdoors
    ransomware
    spyware, adware
    botnets run on distributed machines
    rootkits installed in privileged area